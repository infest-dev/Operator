/**
 * Copyright Â© 2017 Infest Developer Team.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 * * Neither the name of the copyright holder nor the names of its contributors
 *   may be used to endorse or promote products derived from this software 
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package com.jogjadamai.infest.operator;


/**
 * <h1>class <code>MainGUI</code></h1>
 * <p><code>MainGUI</code> is <code>javax.swing.JFrame</code> class defining
 * the Main Graphical User Interface of the application.</p>
 * <br>
 * <p><b><i>Coded, built, and packaged with passion by Adam Afandi for Infest.</i></b></p>
 * 
 * @author Adam Afandi
 * @version 2017.03.10.0001
 */
public final class MainGUI extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        imagePanelPopupMenu = new javax.swing.JPopupMenu();
        saveImageToFileMenuItem = new javax.swing.JMenuItem();
        changeImageMenuItem = new javax.swing.JMenuItem();
        infestLogoLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        manageMenusButton = new javax.swing.JButton();
        manageTablesButton = new javax.swing.JButton();
        financialStatementButton = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        welcomePanel = new javax.swing.JPanel();
        welcomeLogoLabel = new javax.swing.JLabel();
        manageMenusPanel = new javax.swing.JPanel();
        manageMenusUpperPanel = new javax.swing.JPanel();
        deleteMenuButton = new javax.swing.JButton();
        newMenuButton = new javax.swing.JButton();
        saveChangesMenuButton = new javax.swing.JButton();
        manageMenusLeftUpperPanel = new javax.swing.JPanel();
        menuTypeLabel = new javax.swing.JLabel();
        menuTypeComboBox = new javax.swing.JComboBox();
        currencyLabel = new javax.swing.JLabel();
        menuPriceLabel = new javax.swing.JLabel();
        menuStockLabel = new javax.swing.JLabel();
        menuDurationLabel = new javax.swing.JLabel();
        unitLabel = new javax.swing.JLabel();
        minutesLabel = new javax.swing.JLabel();
        menuStockField = new javax.swing.JSpinner();
        menuDurationField = new javax.swing.JSpinner();
        menuPriceField = new javax.swing.JSpinner();
        manageMenusRightUpperPanel = new javax.swing.JPanel();
        menuDescriptionScrollPane = new javax.swing.JScrollPane();
        menuDescriptionArea = new javax.swing.JTextArea();
        menuDescriptionLabel = new javax.swing.JLabel();
        menuIDLabel = new javax.swing.JLabel();
        menuIDField = new javax.swing.JTextField();
        menuNameLabel = new javax.swing.JLabel();
        menuNameField = new javax.swing.JTextField();
        menuImagePanel = new javax.swing.JPanel();
        menuImageIconLabel = new javax.swing.JLabel();
        manageMenusLowerPanel = new javax.swing.JPanel();
        menusTableScrollPane = new javax.swing.JScrollPane();
        menusTable = new org.jdesktop.swingx.JXTable();
        searchMenusField = new javax.swing.JTextField();
        searchMenusButton = new javax.swing.JButton();
        showAllMenusButton = new javax.swing.JButton();
        manageTablesPanel = new javax.swing.JPanel();
        manageTablesLeftPanel = new javax.swing.JPanel();
        tableIDLabel = new javax.swing.JLabel();
        tableIDField = new javax.swing.JTextField();
        tableNameLabel = new javax.swing.JLabel();
        tableNameField = new javax.swing.JTextField();
        tableDescriptionLabel = new javax.swing.JLabel();
        tableDescriptionScrollPane = new javax.swing.JScrollPane();
        tableDescriptionArea = new javax.swing.JTextArea();
        newTableButton = new javax.swing.JButton();
        saveChangesTableButton = new javax.swing.JButton();
        deleteTableButton = new javax.swing.JButton();
        manageTablesRightPanel = new javax.swing.JPanel();
        tablesTableScrollPane = new javax.swing.JScrollPane();
        tablesTable = new org.jdesktop.swingx.JXTable();
        searchTablesButton = new javax.swing.JButton();
        searchTablesField = new javax.swing.JTextField();
        financialStatementPanel = new javax.swing.JPanel();
        financialStatementScrollPane = new javax.swing.JScrollPane();
        financialStatementTable = new org.jdesktop.swingx.JXTable();
        financialStatementDateChooser = new com.toedter.calendar.JDateChooser();
        getFinancialStatementButton = new javax.swing.JButton();
        findByDateCheckBox = new javax.swing.JCheckBox();
        totalIncomeLabel = new javax.swing.JLabel();
        totalIncomeValueLabel = new javax.swing.JLabel();
        printFinancialStatementButton = new javax.swing.JButton();
        mainMenuBar = new javax.swing.JMenuBar();
        programMenu = new javax.swing.JMenu();
        welcomeScreenMenuItem = new javax.swing.JMenuItem();
        signOutMenuItem = new javax.swing.JMenuItem();
        programMenuSeparator = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();
        manageMenu = new javax.swing.JMenu();
        manageMenuMenuItem = new javax.swing.JMenuItem();
        manageTableMenuItem = new javax.swing.JMenuItem();
        generateMenu = new javax.swing.JMenu();
        financialStatementMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        seeDocumentationMenuItem = new javax.swing.JMenuItem();

        imagePanelPopupMenu.setToolTipText("");
        imagePanelPopupMenu.setDoubleBuffered(true);
        imagePanelPopupMenu.setName("imagePanelPopupMenu"); // NOI18N

        saveImageToFileMenuItem.setText("Save Image to Files");
        saveImageToFileMenuItem.setToolTipText("Save the image to file.");
        saveImageToFileMenuItem.setDoubleBuffered(true);
        saveImageToFileMenuItem.setEnabled(false);
        saveImageToFileMenuItem.setName("saveImageToFileMenuItem"); // NOI18N
        saveImageToFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveImageToFileMenuItemActionPerformed(evt);
            }
        });
        imagePanelPopupMenu.add(saveImageToFileMenuItem);

        changeImageMenuItem.setText("Change Image");
        changeImageMenuItem.setToolTipText("Change image of this menu.");
        changeImageMenuItem.setDoubleBuffered(true);
        changeImageMenuItem.setEnabled(false);
        changeImageMenuItem.setName("changeImageMenuItem"); // NOI18N
        changeImageMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeImageMenuItemActionPerformed(evt);
            }
        });
        imagePanelPopupMenu.add(changeImageMenuItem);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("INFEST: Operator Panel");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/com/jogjadamai/infest/assets/InfestIcon.png")).getImage());
        setMinimumSize(new java.awt.Dimension(800, 660));
        setName("mainGUI"); // NOI18N
        setResizable(false);

        infestLogoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jogjadamai/infest/assets/MainGUILogo.png"))); // NOI18N
        infestLogoLabel.setToolTipText("");
        infestLogoLabel.setDoubleBuffered(true);
        infestLogoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                infestLogoLabelMouseClicked(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Intro Head R Base", 0, 36)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(101, 17, 18));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        titleLabel.setToolTipText("");
        titleLabel.setDoubleBuffered(true);

        manageMenusButton.setBackground(new java.awt.Color(0xffffff));
        manageMenusButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jogjadamai/infest/assets/ManageMenuButton.png"))); // NOI18N
        manageMenusButton.setBorder(null);
        manageMenusButton.setDoubleBuffered(true);
        manageMenusButton.setName("manageMenusButton"); // NOI18N
        manageMenusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageMenusButtonActionPerformed(evt);
            }
        });

        manageTablesButton.setBackground(new java.awt.Color(0xffffff));
        manageTablesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jogjadamai/infest/assets/ManageTableButton.png"))); // NOI18N
        manageTablesButton.setBorder(null);
        manageTablesButton.setDoubleBuffered(true);
        manageTablesButton.setName("manageTablesButton"); // NOI18N
        manageTablesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageTablesButtonActionPerformed(evt);
            }
        });

        financialStatementButton.setBackground(new java.awt.Color(0xffffff));
        financialStatementButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jogjadamai/infest/assets/FinancialStatementButton.png"))); // NOI18N
        financialStatementButton.setBorder(null);
        financialStatementButton.setDoubleBuffered(true);
        financialStatementButton.setName("financialStatementButton"); // NOI18N
        financialStatementButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                financialStatementButtonActionPerformed(evt);
            }
        });

        mainPanel.setMaximumSize(new java.awt.Dimension(760, 500));
        mainPanel.setMinimumSize(new java.awt.Dimension(760, 500));
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setOpaque(false);
        mainPanel.setPreferredSize(new java.awt.Dimension(760, 500));
        mainPanel.setLayout(new java.awt.CardLayout());

        welcomePanel.setName("welcomePanel"); // NOI18N
        welcomePanel.setOpaque(false);

        welcomeLogoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcomeLogoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jogjadamai/infest/assets/OperatorWelcome.png"))); // NOI18N
        welcomeLogoLabel.setDoubleBuffered(true);
        welcomeLogoLabel.setFocusable(false);
        welcomeLogoLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout welcomePanelLayout = new javax.swing.GroupLayout(welcomePanel);
        welcomePanel.setLayout(welcomePanelLayout);
        welcomePanelLayout.setHorizontalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePanelLayout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addComponent(welcomeLogoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(230, 230, 230))
        );
        welcomePanelLayout.setVerticalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(welcomeLogoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        mainPanel.add(welcomePanel, "welcomeCard");

        manageMenusPanel.setName("manageMenusPanel"); // NOI18N
        manageMenusPanel.setOpaque(false);
        manageMenusPanel.setPreferredSize(new java.awt.Dimension(850, 500));

        manageMenusUpperPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Modify Menu"));
        manageMenusUpperPanel.setMaximumSize(new java.awt.Dimension(745, 282));
        manageMenusUpperPanel.setMinimumSize(new java.awt.Dimension(745, 282));
        manageMenusUpperPanel.setName("manageMenusUpperPanel"); // NOI18N
        manageMenusUpperPanel.setOpaque(false);

        deleteMenuButton.setText("Delete Menu (Off the Market)");
        deleteMenuButton.setToolTipText("Delete selected menu (make the menu out of the market, but still recorded in order to generate Financial Report).");
        deleteMenuButton.setDoubleBuffered(true);
        deleteMenuButton.setEnabled(false);
        deleteMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMenuButtonActionPerformed(evt);
            }
        });

        newMenuButton.setText("New Menu");
        newMenuButton.setToolTipText("Create new menu.");
        newMenuButton.setDoubleBuffered(true);
        newMenuButton.setPreferredSize(new java.awt.Dimension(67, 23));
        newMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMenuButtonActionPerformed(evt);
            }
        });

        saveChangesMenuButton.setText("Save Changes");
        saveChangesMenuButton.setToolTipText("Save any changes made on this menu.");
        saveChangesMenuButton.setDoubleBuffered(true);
        saveChangesMenuButton.setEnabled(false);
        saveChangesMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveChangesMenuButtonActionPerformed(evt);
            }
        });

        manageMenusLeftUpperPanel.setOpaque(false);

        menuTypeLabel.setText("Type");
        menuTypeLabel.setDoubleBuffered(true);

        menuTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OTHER / NOT DISPLAYED", "APPETIZER", "MAIN COURSE", "DESSERT", "BEVERAGES" }));
        menuTypeComboBox.setToolTipText("Choose the type of the menu.");
        menuTypeComboBox.setDoubleBuffered(true);
        menuTypeComboBox.setEnabled(false);

        currencyLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        currencyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        currencyLabel.setText("CUR");
        currencyLabel.setToolTipText("Currency: only an Administrator is able to change this currency configuration.");
        currencyLabel.setDoubleBuffered(true);
        currencyLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        menuPriceLabel.setText("Price");
        menuPriceLabel.setDoubleBuffered(true);

        menuStockLabel.setText("Stock");
        menuStockLabel.setDoubleBuffered(true);

        menuDurationLabel.setText("Duration");
        menuDurationLabel.setDoubleBuffered(true);

        unitLabel.setText("unit(s)");
        unitLabel.setDoubleBuffered(true);

        minutesLabel.setText("minute(s)");
        minutesLabel.setDoubleBuffered(true);

        menuStockField.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        menuStockField.setToolTipText("Set the stock of the menu (in unit(s)).");
        menuStockField.setDoubleBuffered(true);
        menuStockField.setEnabled(false);

        menuDurationField.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        menuDurationField.setToolTipText("Set the duration of the menu to be cooked (in minute(s)).");
        menuDurationField.setDoubleBuffered(true);
        menuDurationField.setEnabled(false);

        menuPriceField.setToolTipText("Set the price of the menu (in currency according to configuration set by Administrator).");
        menuPriceField.setDoubleBuffered(true);
        menuPriceField.setEnabled(false);

        javax.swing.GroupLayout manageMenusLeftUpperPanelLayout = new javax.swing.GroupLayout(manageMenusLeftUpperPanel);
        manageMenusLeftUpperPanel.setLayout(manageMenusLeftUpperPanelLayout);
        manageMenusLeftUpperPanelLayout.setHorizontalGroup(
            manageMenusLeftUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageMenusLeftUpperPanelLayout.createSequentialGroup()
                .addGroup(manageMenusLeftUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuTypeLabel)
                    .addComponent(menuStockLabel)
                    .addComponent(menuPriceLabel)
                    .addComponent(menuDurationLabel))
                .addGap(10, 10, 10)
                .addGroup(manageMenusLeftUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, manageMenusLeftUpperPanelLayout.createSequentialGroup()
                        .addGroup(manageMenusLeftUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(menuTypeComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, manageMenusLeftUpperPanelLayout.createSequentialGroup()
                                .addComponent(menuStockField, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(unitLabel))
                            .addComponent(menuPriceField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(manageMenusLeftUpperPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(manageMenusLeftUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(currencyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(manageMenusLeftUpperPanelLayout.createSequentialGroup()
                                .addComponent(menuDurationField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(minutesLabel)))))
                .addGap(0, 0, 0))
        );
        manageMenusLeftUpperPanelLayout.setVerticalGroup(
            manageMenusLeftUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageMenusLeftUpperPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(manageMenusLeftUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(menuTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(menuTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(manageMenusLeftUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(menuPriceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currencyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(menuPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(manageMenusLeftUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(unitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manageMenusLeftUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(menuStockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(menuStockField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(manageMenusLeftUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageMenusLeftUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(menuDurationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(menuDurationField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(minutesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        manageMenusRightUpperPanel.setOpaque(false);

        menuDescriptionScrollPane.setDoubleBuffered(true);

        menuDescriptionArea.setColumns(20);
        menuDescriptionArea.setLineWrap(true);
        menuDescriptionArea.setToolTipText("Set the description of the menu.");
        menuDescriptionArea.setWrapStyleWord(true);
        menuDescriptionArea.setDoubleBuffered(true);
        menuDescriptionArea.setEnabled(false);
        menuDescriptionScrollPane.setViewportView(menuDescriptionArea);

        menuDescriptionLabel.setText("Description");
        menuDescriptionLabel.setDoubleBuffered(true);

        javax.swing.GroupLayout manageMenusRightUpperPanelLayout = new javax.swing.GroupLayout(manageMenusRightUpperPanel);
        manageMenusRightUpperPanel.setLayout(manageMenusRightUpperPanelLayout);
        manageMenusRightUpperPanelLayout.setHorizontalGroup(
            manageMenusRightUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuDescriptionScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
            .addGroup(manageMenusRightUpperPanelLayout.createSequentialGroup()
                .addComponent(menuDescriptionLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        manageMenusRightUpperPanelLayout.setVerticalGroup(
            manageMenusRightUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageMenusRightUpperPanelLayout.createSequentialGroup()
                .addComponent(menuDescriptionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menuDescriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        menuIDLabel.setText("ID");
        menuIDLabel.setDoubleBuffered(true);

        menuIDField.setEditable(false);
        menuIDField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        menuIDField.setToolTipText("Menu ID.");
        menuIDField.setDoubleBuffered(true);

        menuNameLabel.setText("Name");
        menuNameLabel.setDoubleBuffered(true);

        menuNameField.setToolTipText("Type the name of the menu.");
        menuNameField.setDoubleBuffered(true);
        menuNameField.setEnabled(false);

        menuImagePanel.setToolTipText("Menu image. Right click to save or change.");
        menuImagePanel.setMaximumSize(new java.awt.Dimension(200, 200));
        menuImagePanel.setMinimumSize(new java.awt.Dimension(200, 200));
        menuImagePanel.setName("menuImagePanel"); // NOI18N
        menuImagePanel.setOpaque(false);
        menuImagePanel.setPreferredSize(new java.awt.Dimension(200, 200));
        menuImagePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuImagePanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menuImagePanelMouseReleased(evt);
            }
        });
        menuImagePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menuImageIconLabel.setText("No image. Right click to change.");
        menuImageIconLabel.setToolTipText("Menu image. Right click to save or change.");
        menuImageIconLabel.setDoubleBuffered(true);
        menuImageIconLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuImageIconLabelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menuImageIconLabelMouseReleased(evt);
            }
        });
        menuImagePanel.add(menuImageIconLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout manageMenusUpperPanelLayout = new javax.swing.GroupLayout(manageMenusUpperPanel);
        manageMenusUpperPanel.setLayout(manageMenusUpperPanelLayout);
        manageMenusUpperPanelLayout.setHorizontalGroup(
            manageMenusUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageMenusUpperPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(manageMenusUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageMenusUpperPanelLayout.createSequentialGroup()
                        .addComponent(newMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(deleteMenuButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveChangesMenuButton))
                    .addGroup(manageMenusUpperPanelLayout.createSequentialGroup()
                        .addGroup(manageMenusUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(manageMenusUpperPanelLayout.createSequentialGroup()
                                .addComponent(menuIDLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(menuIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(menuNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(menuNameField))
                            .addGroup(manageMenusUpperPanelLayout.createSequentialGroup()
                                .addComponent(manageMenusLeftUpperPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addComponent(manageMenusRightUpperPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(10, 10, 10)
                        .addComponent(menuImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        manageMenusUpperPanelLayout.setVerticalGroup(
            manageMenusUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageMenusUpperPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(manageMenusUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageMenusUpperPanelLayout.createSequentialGroup()
                        .addGroup(manageMenusUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(menuIDLabel)
                            .addComponent(menuIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(menuNameLabel)
                            .addComponent(menuNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(manageMenusUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(manageMenusLeftUpperPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(manageMenusRightUpperPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(menuImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(manageMenusUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveChangesMenuButton)
                    .addComponent(deleteMenuButton))
                .addGap(10, 10, 10))
        );

        manageMenusLowerPanel.setMaximumSize(new java.awt.Dimension(745, 188));
        manageMenusLowerPanel.setMinimumSize(new java.awt.Dimension(745, 188));
        manageMenusLowerPanel.setName("manageMenusLowerPanel"); // NOI18N
        manageMenusLowerPanel.setOpaque(false);
        manageMenusLowerPanel.setPreferredSize(new java.awt.Dimension(745, 188));

        menusTableScrollPane.setToolTipText("List of menus.");
        menusTableScrollPane.setDoubleBuffered(true);
        menusTableScrollPane.setMaximumSize(new java.awt.Dimension(735, 150));
        menusTableScrollPane.setMinimumSize(new java.awt.Dimension(735, 150));
        menusTableScrollPane.setPreferredSize(new java.awt.Dimension(735, 150));

        menusTable.setToolTipText("List of menus.");
        menusTable.setDoubleBuffered(true);
        menusTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menusTableMouseClicked(evt);
            }
        });
        menusTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                menusTableKeyReleased(evt);
            }
        });
        menusTableScrollPane.setViewportView(menusTable);

        searchMenusField.setToolTipText("Type the seach terms...");
        searchMenusField.setDoubleBuffered(true);
        searchMenusField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMenusFieldActionPerformed(evt);
            }
        });

        searchMenusButton.setText("Search Menu");
        searchMenusButton.setToolTipText("Search menu based on terms.");
        searchMenusButton.setDoubleBuffered(true);
        searchMenusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMenusButtonActionPerformed(evt);
            }
        });

        showAllMenusButton.setText("Show All Menus");
        showAllMenusButton.setToolTipText("Show all menus.");
        showAllMenusButton.setDoubleBuffered(true);
        showAllMenusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllMenusButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout manageMenusLowerPanelLayout = new javax.swing.GroupLayout(manageMenusLowerPanel);
        manageMenusLowerPanel.setLayout(manageMenusLowerPanelLayout);
        manageMenusLowerPanelLayout.setHorizontalGroup(
            manageMenusLowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageMenusLowerPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(manageMenusLowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageMenusLowerPanelLayout.createSequentialGroup()
                        .addComponent(searchMenusField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(searchMenusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(showAllMenusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(menusTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );
        manageMenusLowerPanelLayout.setVerticalGroup(
            manageMenusLowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageMenusLowerPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(manageMenusLowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchMenusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchMenusButton)
                    .addComponent(showAllMenusButton))
                .addGap(5, 5, 5)
                .addComponent(menusTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout manageMenusPanelLayout = new javax.swing.GroupLayout(manageMenusPanel);
        manageMenusPanel.setLayout(manageMenusPanelLayout);
        manageMenusPanelLayout.setHorizontalGroup(
            manageMenusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageMenusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(manageMenusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(manageMenusUpperPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manageMenusLowerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        manageMenusPanelLayout.setVerticalGroup(
            manageMenusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageMenusPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(manageMenusUpperPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(manageMenusLowerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        mainPanel.add(manageMenusPanel, "manageMenusCard");
        manageMenusPanel.getAccessibleContext().setAccessibleName("");

        manageTablesPanel.setName("manageTablesPanel"); // NOI18N
        manageTablesPanel.setOpaque(false);
        manageTablesPanel.setPreferredSize(new java.awt.Dimension(850, 500));

        manageTablesLeftPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Modify Table"));
        manageTablesLeftPanel.setName("manageTablesLeftPanel"); // NOI18N
        manageTablesLeftPanel.setOpaque(false);

        tableIDLabel.setText("ID");
        tableIDLabel.setDoubleBuffered(true);

        tableIDField.setEditable(false);
        tableIDField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tableIDField.setToolTipText("Table ID.");
        tableIDField.setDoubleBuffered(true);

        tableNameLabel.setText("Name");
        tableNameLabel.setDoubleBuffered(true);

        tableNameField.setToolTipText("Type the name of the table.");
        tableNameField.setDoubleBuffered(true);
        tableNameField.setEnabled(false);

        tableDescriptionLabel.setText("Description");
        tableDescriptionLabel.setDoubleBuffered(true);

        tableDescriptionScrollPane.setDoubleBuffered(true);

        tableDescriptionArea.setColumns(20);
        tableDescriptionArea.setLineWrap(true);
        tableDescriptionArea.setToolTipText("Type the description of the table.");
        tableDescriptionArea.setWrapStyleWord(true);
        tableDescriptionArea.setDoubleBuffered(true);
        tableDescriptionArea.setEnabled(false);
        tableDescriptionScrollPane.setViewportView(tableDescriptionArea);

        newTableButton.setText("New Table");
        newTableButton.setToolTipText("Create new table.");
        newTableButton.setDoubleBuffered(true);
        newTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTableButtonActionPerformed(evt);
            }
        });

        saveChangesTableButton.setText("Save Changes");
        saveChangesTableButton.setToolTipText("Save any changes made on this table.");
        saveChangesTableButton.setDoubleBuffered(true);
        saveChangesTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveChangesTableButtonActionPerformed(evt);
            }
        });

        deleteTableButton.setText("Delete Table");
        deleteTableButton.setToolTipText("Delete selected table.");
        deleteTableButton.setDoubleBuffered(true);
        deleteTableButton.setEnabled(false);
        deleteTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTableButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout manageTablesLeftPanelLayout = new javax.swing.GroupLayout(manageTablesLeftPanel);
        manageTablesLeftPanel.setLayout(manageTablesLeftPanelLayout);
        manageTablesLeftPanelLayout.setHorizontalGroup(
            manageTablesLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageTablesLeftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(manageTablesLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tableNameField)
                    .addComponent(saveChangesTableButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tableDescriptionScrollPane)
                    .addGroup(manageTablesLeftPanelLayout.createSequentialGroup()
                        .addComponent(tableIDLabel)
                        .addGap(10, 10, 10)
                        .addComponent(tableIDField))
                    .addGroup(manageTablesLeftPanelLayout.createSequentialGroup()
                        .addGroup(manageTablesLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tableNameLabel)
                            .addComponent(tableDescriptionLabel)
                            .addGroup(manageTablesLeftPanelLayout.createSequentialGroup()
                                .addComponent(newTableButton)
                                .addGap(69, 69, 69)
                                .addComponent(deleteTableButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        manageTablesLeftPanelLayout.setVerticalGroup(
            manageTablesLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageTablesLeftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(manageTablesLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newTableButton)
                    .addComponent(deleteTableButton))
                .addGap(30, 30, 30)
                .addGroup(manageTablesLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tableIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tableIDLabel))
                .addGap(23, 23, 23)
                .addComponent(tableNameLabel)
                .addGap(10, 10, 10)
                .addComponent(tableNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(tableDescriptionLabel)
                .addGap(10, 10, 10)
                .addComponent(tableDescriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(saveChangesTableButton)
                .addContainerGap())
        );

        manageTablesRightPanel.setName("manageTablesRightPanel"); // NOI18N
        manageTablesRightPanel.setOpaque(false);

        tablesTableScrollPane.setToolTipText("List of tables.");
        tablesTableScrollPane.setDoubleBuffered(true);

        tablesTable.setToolTipText("List of tables.");
        tablesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablesTableMouseClicked(evt);
            }
        });
        tablesTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tablesTableKeyReleased(evt);
            }
        });
        tablesTableScrollPane.setViewportView(tablesTable);

        searchTablesButton.setText("Search Tables");
        searchTablesButton.setToolTipText("");
        searchTablesButton.setDoubleBuffered(true);
        searchTablesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTablesButtonActionPerformed(evt);
            }
        });

        searchTablesField.setDoubleBuffered(true);
        searchTablesField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTablesFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout manageTablesRightPanelLayout = new javax.swing.GroupLayout(manageTablesRightPanel);
        manageTablesRightPanel.setLayout(manageTablesRightPanelLayout);
        manageTablesRightPanelLayout.setHorizontalGroup(
            manageTablesRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageTablesRightPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(manageTablesRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manageTablesRightPanelLayout.createSequentialGroup()
                        .addComponent(searchTablesField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchTablesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tablesTableScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );
        manageTablesRightPanelLayout.setVerticalGroup(
            manageTablesRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manageTablesRightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(manageTablesRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTablesButton)
                    .addComponent(searchTablesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(tablesTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9))
        );

        javax.swing.GroupLayout manageTablesPanelLayout = new javax.swing.GroupLayout(manageTablesPanel);
        manageTablesPanel.setLayout(manageTablesPanelLayout);
        manageTablesPanelLayout.setHorizontalGroup(
            manageTablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageTablesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(manageTablesLeftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(manageTablesRightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        manageTablesPanelLayout.setVerticalGroup(
            manageTablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageTablesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(manageTablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(manageTablesLeftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(manageTablesRightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        mainPanel.add(manageTablesPanel, "manageTablesCard");

        financialStatementPanel.setMaximumSize(new java.awt.Dimension(750, 500));
        financialStatementPanel.setMinimumSize(new java.awt.Dimension(750, 500));
        financialStatementPanel.setName("financialStatementPanel"); // NOI18N
        financialStatementPanel.setOpaque(false);
        financialStatementPanel.setPreferredSize(new java.awt.Dimension(750, 500));

        financialStatementScrollPane.setDoubleBuffered(true);

        financialStatementTable.setToolTipText("Financial Statement.");
        financialStatementTable.setDoubleBuffered(true);
        financialStatementTable.setRowSelectionAllowed(false);
        financialStatementScrollPane.setViewportView(financialStatementTable);

        financialStatementDateChooser.setBackground(new java.awt.Color(0xffffff));
        financialStatementDateChooser.setToolTipText("Choose sales date.");
        financialStatementDateChooser.setDateFormatString("dd MMMM yyyy");
        financialStatementDateChooser.setMaximumSize(new java.awt.Dimension(150, 25));
        financialStatementDateChooser.setMinimumSize(new java.awt.Dimension(150, 25));
        financialStatementDateChooser.setName("financialStatementDateChooser"); // NOI18N
        financialStatementDateChooser.setPreferredSize(new java.awt.Dimension(150, 25));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, findByDateCheckBox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), financialStatementDateChooser, org.jdesktop.beansbinding.BeanProperty.create("enabled"), "financialStatementByDate");
        binding.setSourceNullValue(false);
        binding.setSourceUnreadableValue(false);
        bindingGroup.addBinding(binding);

        getFinancialStatementButton.setText("Get Statement");
        getFinancialStatementButton.setToolTipText("Generate financial statement based on sales made (all or on a specific date).");
        getFinancialStatementButton.setDoubleBuffered(true);
        getFinancialStatementButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getFinancialStatementButtonActionPerformed(evt);
            }
        });

        findByDateCheckBox.setBackground(new java.awt.Color(0xffffff));
        findByDateCheckBox.setText("Financial Statement by Date");
        findByDateCheckBox.setToolTipText("Instead of generate Financial Statement of all sales, check to generate financial statement of sales made in specific date.");
        findByDateCheckBox.setDoubleBuffered(true);
        findByDateCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findByDateCheckBoxActionPerformed(evt);
            }
        });

        totalIncomeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        totalIncomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        totalIncomeLabel.setText("Total Income: ");
        totalIncomeLabel.setDoubleBuffered(true);

        totalIncomeValueLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalIncomeValueLabel.setText("0");
        totalIncomeValueLabel.setToolTipText("Total income based on Financial Statement.");
        totalIncomeValueLabel.setDoubleBuffered(true);
        totalIncomeValueLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        printFinancialStatementButton.setText("Print Statement");
        printFinancialStatementButton.setToolTipText("Print this financial statement.");
        printFinancialStatementButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printFinancialStatementButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout financialStatementPanelLayout = new javax.swing.GroupLayout(financialStatementPanel);
        financialStatementPanel.setLayout(financialStatementPanelLayout);
        financialStatementPanelLayout.setHorizontalGroup(
            financialStatementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(financialStatementPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(financialStatementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(financialStatementPanelLayout.createSequentialGroup()
                        .addComponent(findByDateCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(financialStatementDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111)
                        .addComponent(getFinancialStatementButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printFinancialStatementButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(financialStatementScrollPane))
                .addGap(15, 15, 15))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, financialStatementPanelLayout.createSequentialGroup()
                .addGap(380, 380, 380)
                .addComponent(totalIncomeLabel)
                .addGap(10, 10, 10)
                .addComponent(totalIncomeValueLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        financialStatementPanelLayout.setVerticalGroup(
            financialStatementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(financialStatementPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(financialStatementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(findByDateCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(financialStatementDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(financialStatementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(getFinancialStatementButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(printFinancialStatementButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addComponent(financialStatementScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(financialStatementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalIncomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalIncomeValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        mainPanel.add(financialStatementPanel, "financialStatementCard");

        mainMenuBar.setToolTipText("What do you want to do?");
        mainMenuBar.setDoubleBuffered(true);
        mainMenuBar.setName("mainMenuBar"); // NOI18N

        programMenu.setText("Program");
        programMenu.setToolTipText("Ask the program...");
        programMenu.setDoubleBuffered(true);
        programMenu.setName("programMenu"); // NOI18N

        welcomeScreenMenuItem.setText("Welcome Screen");
        welcomeScreenMenuItem.setToolTipText("Show welcome screen.");
        welcomeScreenMenuItem.setDoubleBuffered(true);
        welcomeScreenMenuItem.setName("welcomeScreenMenuItem"); // NOI18N
        welcomeScreenMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                welcomeScreenMenuItemActionPerformed(evt);
            }
        });
        programMenu.add(welcomeScreenMenuItem);

        signOutMenuItem.setText("Sign Out");
        signOutMenuItem.setToolTipText("Sign out from the application.");
        signOutMenuItem.setDoubleBuffered(true);
        signOutMenuItem.setName("signOutMenuItem"); // NOI18N
        signOutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signOutMenuItemActionPerformed(evt);
            }
        });
        programMenu.add(signOutMenuItem);

        programMenuSeparator.setDoubleBuffered(true);
        programMenuSeparator.setName("programMenuSeparator"); // NOI18N
        programMenu.add(programMenuSeparator);

        exitMenuItem.setText("Exit");
        exitMenuItem.setToolTipText("Good bye!");
        exitMenuItem.setDoubleBuffered(true);
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        programMenu.add(exitMenuItem);

        mainMenuBar.add(programMenu);

        manageMenu.setText("Manage");
        manageMenu.setToolTipText("Manage something...");
        manageMenu.setDoubleBuffered(true);
        manageMenu.setName("manageMenu"); // NOI18N

        manageMenuMenuItem.setText("Manage Menu");
        manageMenuMenuItem.setToolTipText("Manage any menus.");
        manageMenuMenuItem.setDoubleBuffered(true);
        manageMenuMenuItem.setName("manageMenuMenuItem"); // NOI18N
        manageMenuMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageMenuMenuItemActionPerformed(evt);
            }
        });
        manageMenu.add(manageMenuMenuItem);

        manageTableMenuItem.setText("Manage Table");
        manageTableMenuItem.setToolTipText("Manage any tables.");
        manageTableMenuItem.setDoubleBuffered(true);
        manageTableMenuItem.setName("manageTableMenuItem"); // NOI18N
        manageTableMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageTableMenuItemActionPerformed(evt);
            }
        });
        manageMenu.add(manageTableMenuItem);

        mainMenuBar.add(manageMenu);

        generateMenu.setText("Generate");
        generateMenu.setToolTipText("Generate something...");
        generateMenu.setDoubleBuffered(true);
        generateMenu.setName("generateMenu"); // NOI18N

        financialStatementMenuItem.setText("Financial Statement");
        financialStatementMenuItem.setToolTipText("Generate sales report based on all sales made or on a specific day of sales.");
        financialStatementMenuItem.setDoubleBuffered(true);
        financialStatementMenuItem.setName("financialStatementMenuItem"); // NOI18N
        financialStatementMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                financialStatementMenuItemActionPerformed(evt);
            }
        });
        generateMenu.add(financialStatementMenuItem);

        mainMenuBar.add(generateMenu);

        helpMenu.setText("Help");
        helpMenu.setToolTipText("Do you need assistance?");
        helpMenu.setDoubleBuffered(true);
        helpMenu.setName("helpMenu"); // NOI18N

        seeDocumentationMenuItem.setText("See Documentation");
        seeDocumentationMenuItem.setToolTipText("Open the documentation file of the program.");
        seeDocumentationMenuItem.setDoubleBuffered(true);
        seeDocumentationMenuItem.setName("seeDocumentationMenuItem"); // NOI18N
        seeDocumentationMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeDocumentationMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(seeDocumentationMenuItem);

        mainMenuBar.add(helpMenu);

        setJMenuBar(mainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(manageMenusButton)
                        .addGap(15, 15, 15)
                        .addComponent(manageTablesButton)
                        .addGap(15, 15, 15)
                        .addComponent(financialStatementButton)
                        .addGap(10, 10, 10)
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(infestLogoLabel))
                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(manageMenusButton)
                            .addComponent(manageTablesButton)
                            .addComponent(financialStatementButton))
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(infestLogoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        mainPanel.getAccessibleContext().setAccessibleDescription("");

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void menusTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menusTableMouseClicked
        operator.loadFields(CardList.MENUS);
    }//GEN-LAST:event_menusTableMouseClicked

    private void manageMenusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageMenusButtonActionPerformed
        operator.switchCard(CardList.MENUS);
    }//GEN-LAST:event_manageMenusButtonActionPerformed

    private void financialStatementButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_financialStatementButtonActionPerformed
        operator.switchCard(CardList.FINANCIAL_STATEMENT);
    }//GEN-LAST:event_financialStatementButtonActionPerformed

    private void tablesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablesTableMouseClicked
        operator.loadFields(CardList.TABLES);
    }//GEN-LAST:event_tablesTableMouseClicked

    private void newTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTableButtonActionPerformed
        operator.newEntity(CardList.TABLES);
    }//GEN-LAST:event_newTableButtonActionPerformed

    private void saveChangesTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveChangesTableButtonActionPerformed
        operator.saveChanges(CardList.TABLES);
    }//GEN-LAST:event_saveChangesTableButtonActionPerformed

    private void manageTablesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageTablesButtonActionPerformed
        operator.switchCard(CardList.TABLES);
    }//GEN-LAST:event_manageTablesButtonActionPerformed

    private void searchTablesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTablesButtonActionPerformed
        operator.search(CardList.TABLES);
    }//GEN-LAST:event_searchTablesButtonActionPerformed

    private void deleteTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTableButtonActionPerformed
        if(javax.swing.JOptionPane.showConfirmDialog(this, 
                "Are you sure to delete this table [" + tableIDField.getText() + ": " + tableNameField.getText() + "]?", 
                "INFEST: Delete Confirmation", 
                javax.swing.JOptionPane.YES_NO_OPTION, 
                javax.swing.JOptionPane.WARNING_MESSAGE) == javax.swing.JOptionPane.YES_OPTION) {
            operator.delete(CardList.TABLES);
        }
    }//GEN-LAST:event_deleteTableButtonActionPerformed

    private void getFinancialStatementButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getFinancialStatementButtonActionPerformed
        operator.generateFinancialStatement();
    }//GEN-LAST:event_getFinancialStatementButtonActionPerformed

    private void findByDateCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findByDateCheckBoxActionPerformed
        ((javax.swing.JTextField) financialStatementDateChooser.getDateEditor().getUiComponent()).setText("");
    }//GEN-LAST:event_findByDateCheckBoxActionPerformed

    private void showAllMenusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllMenusButtonActionPerformed
        operator.readAll(CardList.MENUS);
    }//GEN-LAST:event_showAllMenusButtonActionPerformed

    private void searchMenusFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMenusFieldActionPerformed
        operator.search(CardList.MENUS);
    }//GEN-LAST:event_searchMenusFieldActionPerformed

    private void searchMenusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMenusButtonActionPerformed
        operator.search(CardList.MENUS);
    }//GEN-LAST:event_searchMenusButtonActionPerformed

    private void saveChangesMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveChangesMenuButtonActionPerformed
        operator.saveChanges(CardList.MENUS);
    }//GEN-LAST:event_saveChangesMenuButtonActionPerformed

    private void newMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuButtonActionPerformed
        operator.newEntity(CardList.MENUS);
    }//GEN-LAST:event_newMenuButtonActionPerformed

    private void deleteMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMenuButtonActionPerformed
        if(javax.swing.JOptionPane.showConfirmDialog(this, 
                "Are you sure to delete this menu [" + menuIDField.getText() + ": " + menuNameField.getText() + "]?", 
                "INFEST: Delete Confirmation", 
                javax.swing.JOptionPane.YES_NO_OPTION, 
                javax.swing.JOptionPane.WARNING_MESSAGE) == javax.swing.JOptionPane.YES_OPTION) {
            operator.delete(CardList.MENUS);
        }
    }//GEN-LAST:event_deleteMenuButtonActionPerformed

    private void searchTablesFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTablesFieldActionPerformed
        operator.search(CardList.TABLES);
    }//GEN-LAST:event_searchTablesFieldActionPerformed

    private void infestLogoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infestLogoLabelMouseClicked
        operator.switchCard(CardList.WELCOME);
    }//GEN-LAST:event_infestLogoLabelMouseClicked

    private void welcomeScreenMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_welcomeScreenMenuItemActionPerformed
        operator.switchCard(CardList.WELCOME);
    }//GEN-LAST:event_welcomeScreenMenuItemActionPerformed

    private void signOutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signOutMenuItemActionPerformed
        operator.signOut();
    }//GEN-LAST:event_signOutMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        operator.shutdown(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void manageMenuMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageMenuMenuItemActionPerformed
        operator.switchCard(CardList.MENUS);
    }//GEN-LAST:event_manageMenuMenuItemActionPerformed

    private void manageTableMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageTableMenuItemActionPerformed
        operator.switchCard(CardList.TABLES);
    }//GEN-LAST:event_manageTableMenuItemActionPerformed

    private void financialStatementMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_financialStatementMenuItemActionPerformed
        operator.switchCard(CardList.FINANCIAL_STATEMENT);
    }//GEN-LAST:event_financialStatementMenuItemActionPerformed

    private void seeDocumentationMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeDocumentationMenuItemActionPerformed
        operator.openDocumentation();
    }//GEN-LAST:event_seeDocumentationMenuItemActionPerformed

    private void menuImagePanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuImagePanelMousePressed
        operator.displayPopupMenu(evt);
    }//GEN-LAST:event_menuImagePanelMousePressed

    private void menuImagePanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuImagePanelMouseReleased
        operator.displayPopupMenu(evt);
    }//GEN-LAST:event_menuImagePanelMouseReleased

    private void saveImageToFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveImageToFileMenuItemActionPerformed
        operator.saveImageToFile();
    }//GEN-LAST:event_saveImageToFileMenuItemActionPerformed

    private void changeImageMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeImageMenuItemActionPerformed
        operator.browseFile();
    }//GEN-LAST:event_changeImageMenuItemActionPerformed

    private void menuImageIconLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuImageIconLabelMousePressed
        operator.displayPopupMenu(evt);
    }//GEN-LAST:event_menuImageIconLabelMousePressed

    private void menuImageIconLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuImageIconLabelMouseReleased
        operator.displayPopupMenu(evt);
    }//GEN-LAST:event_menuImageIconLabelMouseReleased

    private void tablesTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablesTableKeyReleased
        operator.loadFields(CardList.TABLES);
    }//GEN-LAST:event_tablesTableKeyReleased

    private void menusTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_menusTableKeyReleased
        operator.loadFields(CardList.MENUS);
    }//GEN-LAST:event_menusTableKeyReleased

    private void printFinancialStatementButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printFinancialStatementButtonActionPerformed
        operator.printFinancialStatement();
    }//GEN-LAST:event_printFinancialStatementButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JMenuItem changeImageMenuItem;
    protected javax.swing.JLabel currencyLabel;
    protected javax.swing.JButton deleteMenuButton;
    protected javax.swing.JButton deleteTableButton;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JButton financialStatementButton;
    protected com.toedter.calendar.JDateChooser financialStatementDateChooser;
    private javax.swing.JMenuItem financialStatementMenuItem;
    private javax.swing.JPanel financialStatementPanel;
    private javax.swing.JScrollPane financialStatementScrollPane;
    protected org.jdesktop.swingx.JXTable financialStatementTable;
    protected javax.swing.JCheckBox findByDateCheckBox;
    private javax.swing.JMenu generateMenu;
    private javax.swing.JButton getFinancialStatementButton;
    private javax.swing.JMenu helpMenu;
    protected javax.swing.JPopupMenu imagePanelPopupMenu;
    private javax.swing.JLabel infestLogoLabel;
    private javax.swing.JMenuBar mainMenuBar;
    protected javax.swing.JPanel mainPanel;
    private javax.swing.JMenu manageMenu;
    private javax.swing.JMenuItem manageMenuMenuItem;
    private javax.swing.JButton manageMenusButton;
    private javax.swing.JPanel manageMenusLeftUpperPanel;
    private javax.swing.JPanel manageMenusLowerPanel;
    private javax.swing.JPanel manageMenusPanel;
    private javax.swing.JPanel manageMenusRightUpperPanel;
    private javax.swing.JPanel manageMenusUpperPanel;
    private javax.swing.JMenuItem manageTableMenuItem;
    private javax.swing.JButton manageTablesButton;
    private javax.swing.JPanel manageTablesLeftPanel;
    private javax.swing.JPanel manageTablesPanel;
    private javax.swing.JPanel manageTablesRightPanel;
    protected javax.swing.JTextArea menuDescriptionArea;
    private javax.swing.JLabel menuDescriptionLabel;
    private javax.swing.JScrollPane menuDescriptionScrollPane;
    protected javax.swing.JSpinner menuDurationField;
    private javax.swing.JLabel menuDurationLabel;
    protected javax.swing.JTextField menuIDField;
    private javax.swing.JLabel menuIDLabel;
    protected javax.swing.JLabel menuImageIconLabel;
    protected javax.swing.JPanel menuImagePanel;
    protected javax.swing.JTextField menuNameField;
    private javax.swing.JLabel menuNameLabel;
    protected javax.swing.JSpinner menuPriceField;
    private javax.swing.JLabel menuPriceLabel;
    protected javax.swing.JSpinner menuStockField;
    private javax.swing.JLabel menuStockLabel;
    protected javax.swing.JComboBox menuTypeComboBox;
    private javax.swing.JLabel menuTypeLabel;
    protected org.jdesktop.swingx.JXTable menusTable;
    private javax.swing.JScrollPane menusTableScrollPane;
    private javax.swing.JLabel minutesLabel;
    private javax.swing.JButton newMenuButton;
    private javax.swing.JButton newTableButton;
    private javax.swing.JButton printFinancialStatementButton;
    private javax.swing.JMenu programMenu;
    private javax.swing.JPopupMenu.Separator programMenuSeparator;
    protected javax.swing.JButton saveChangesMenuButton;
    protected javax.swing.JButton saveChangesTableButton;
    protected javax.swing.JMenuItem saveImageToFileMenuItem;
    private javax.swing.JButton searchMenusButton;
    protected javax.swing.JTextField searchMenusField;
    private javax.swing.JButton searchTablesButton;
    protected javax.swing.JTextField searchTablesField;
    private javax.swing.JMenuItem seeDocumentationMenuItem;
    private javax.swing.JButton showAllMenusButton;
    private javax.swing.JMenuItem signOutMenuItem;
    protected javax.swing.JTextArea tableDescriptionArea;
    private javax.swing.JLabel tableDescriptionLabel;
    private javax.swing.JScrollPane tableDescriptionScrollPane;
    protected javax.swing.JTextField tableIDField;
    private javax.swing.JLabel tableIDLabel;
    protected javax.swing.JTextField tableNameField;
    private javax.swing.JLabel tableNameLabel;
    protected org.jdesktop.swingx.JXTable tablesTable;
    private javax.swing.JScrollPane tablesTableScrollPane;
    protected javax.swing.JLabel titleLabel;
    private javax.swing.JLabel totalIncomeLabel;
    protected javax.swing.JLabel totalIncomeValueLabel;
    private javax.swing.JLabel unitLabel;
    private javax.swing.JLabel welcomeLogoLabel;
    private javax.swing.JPanel welcomePanel;
    private javax.swing.JMenuItem welcomeScreenMenuItem;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private com.jogjadamai.infest.operator.Operator operator;
    
    protected static enum CardList {
        WELCOME, MENUS, TABLES, FINANCIAL_STATEMENT
    }
    
    @Override
    public void run() {
        operator = com.jogjadamai.infest.operator.Operator.getInstance();
        getContentPane().setBackground(new java.awt.Color(0xffffff));
        setLocationRelativeTo(null);
    }
    
    protected java.awt.CardLayout getCardLayout() {
        return (java.awt.CardLayout) mainPanel.getLayout();
    }
    
}
